buildscript {
  configurations.all {
    resolutionStrategy {
      cacheDynamicVersionsFor 180, 'minutes'
      cacheChangingModulesFor 180, 'minutes'
    }
  }
  repositories {
    maven { url = 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath "pl.allegro.tech.build:axion-release-plugin:+"
  }
}

ext {
  // Used by systems.comodal.pagerduty_event_json_iterator_adapter
  jsoniter = "2.9.+" // https://github.com/comodal/json-iterator/releases
}

apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
  tag.prefix = ''
  repository.pushTagsOnly = true
}

final JLV = JavaLanguageVersion.of(project.findProperty('targetJava') as Integer ?: 20)

subprojects {
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  plugins.withType(JavaPlugin).configureEach {
    java {
      modularity.inferModulePath = true
      toolchain {
        languageVersion = JLV
      }
    }
  }

  project.group = 'systems.comodal'
  project.version = scmVersion.version

  ext {
    desc = 'Pagerduty Event Client'
    vcsUrl = 'https://github.com/comodal/pagerduty-client'
  }

  repositories {
    maven {
      url = "https://maven.pkg.github.com/comodal/json-iterator"
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
      }
    }
    mavenCentral()
  }

  configurations.all {
    resolutionStrategy {
      cacheDynamicVersionsFor 15, 'minutes'
      cacheChangingModulesFor 15, 'minutes'
    }
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
  }

  test {
    useJUnitPlatform()
    maxParallelForks = 4
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
      exceptionFormat "full"
      showStandardStreams true
    }
  }

  task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
  }

  task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
  }

  javadoc {
    options.addBooleanOption('html5', true)
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        artifact sourcesJar
        artifact javadocJar
        groupId project.group
        artifactId project.name
        version = project.version
        pom {
          name = project.name
          description = project.desc
          url = project.vcsUrl
          licenses {
            license {
              name = 'Apache License 2.0'
              url = 'https://github.com/comodal/pagerduty-client/blob/master/LICENSE'
            }
          }
          scm {
            connection = 'scm:git:git@github.com:comodal/pagerduty-client.git'
            url = project.vcsUrl
          }
        }
      }
    }
    repositories {
      maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/comodal/pagerduty-client"
        credentials {
          username = System.getenv("GITHUB_ACTOR")
          password = System.getenv("GITHUB_TOKEN")
        }
      }
    }
  }
}
